[{"question":"What is the average order total revenue for customers in each state who have placed at least 3 distinct orders?","query":"WITH customers_orders AS (\nSELECT c.customer_id, c.state\n  FROM customers c\n  JOIN orders o ON c.customer_id = o.customer_id\n  GROUP BY c.customer_id, c.state\n  HAVING COUNT(DISTINCT o.order_id) >= 3\n),\ncustomer_order_totals AS (\nSELECT c.customer_id, c.state, o.order_id, SUM(oi.quantity * oi.unit_price) AS revenue\nFROM customers_orders c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_items oi ON oi.order_id = o.order_id\nGROUP BY c.customer_id, c.state, o.order_id)\nSELECT state, AVG(revenue)\nFROM customer_order_totals\nGROUP BY state;","db_id":"sales_example","tag":"1-hop","creator":"Claude"},{"question":"Find the top 5 products by total revenue for each category, considering only orders placed by customers aged 25 to 35. Show category, product, and revenue.","query":"WITH cte AS (\n  SELECT p.category, p.name AS product_name, \n         SUM(oi.quantity * oi.unit_price) AS revenue\n  FROM order_items oi\n  JOIN orders o ON oi.order_id = o.order_id\n  JOIN products p ON oi.product_id = p.product_id\n  JOIN customers c ON o.customer_id = c.customer_id\n  JOIN demographics d ON c.customer_id = d.customer_id\n  WHERE d.age BETWEEN 25 AND 35\n  GROUP BY p.category, p.name\n)\nSELECT category, product_name, revenue\nFROM (\n  SELECT category, product_name, revenue,\n         ROW_NUMBER() OVER (PARTITION BY category ORDER BY revenue DESC) AS rn\n  FROM cte\n) ranked\nWHERE rn <= 5;","db_id":"sales_example","tag":"1-hop, rank","creator":"Claude"},{"question":"What is the average income of customers who have purchased products from suppliers located in California?","query":"WITH cust AS (\nSELECT DISTINCT c.customer_id\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_items oi ON o.order_id = oi.order_id\nJOIN products p ON oi.product_id = p.product_id\nJOIN suppliers s ON p.supplier_id = s.supplier_id\nWHERE s.state = 'CA'\n)\nSELECT AVG(d.income) AS avg_income\nFROM demographics d\nJOIN cust c ON d.customer_id = c.customer_id;","db_id":"sales_example","tag":"0-hop","creator":"Claude"},{"question":"Find the most popular product category, in terms of total quantity, for each occupation. Show the category, occupation, and total quantity ordered.","query":"SELECT d.occupation, p.category, SUM(oi.quantity) AS total_quantity\nFROM demographics d\nJOIN customers c ON d.customer_id = c.customer_id\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_items oi ON o.order_id = oi.order_id\nJOIN products p ON oi.product_id = p.product_id\nGROUP BY d.occupation, p.category\nHAVING SUM(oi.quantity) = (\n  SELECT MAX(quantity_sum)\n  FROM (\n    SELECT SUM(oi2.quantity) AS quantity_sum\n    FROM demographics d2\n    JOIN customers c2 ON d2.customer_id = c2.customer_id\n    JOIN orders o2 ON c2.customer_id = o2.customer_id\n    JOIN order_items oi2 ON o2.order_id = oi2.order_id\n    JOIN products p2 ON oi2.product_id = p2.product_id\n    WHERE d2.occupation = d.occupation\n    GROUP BY p2.category\n  ) t\n);","db_id":"sales_example","tag":"1-hop, rank","creator":"Claude"},{"question":"What is the total revenue generated by customers in each zip code, considering only orders placed in the past 12 months?","query":"SELECT c.zip_code, SUM(oi.quantity * oi.unit_price) AS total_revenue\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_items oi ON o.order_id = oi.order_id\nWHERE o.order_date >= DATE(date('now'), '-12 months')\nGROUP BY c.zip_code;","db_id":"sales_example","tag":"0-hop","creator":"Claude"},{"question":"Find the top 3 suppliers by total order value for each product category. Return the supplier name, total order value, and product category.","query":"WITH cte AS (\n  SELECT s.supplier_id, s.name AS supplier_name, p.category,\n         SUM(oi.quantity * oi.unit_price) AS total_order_value\n  FROM order_items oi\n  JOIN products p ON oi.product_id = p.product_id\n  JOIN suppliers s ON p.supplier_id = s.supplier_id\n  GROUP BY s.supplier_id, s.name, p.category\n)\nSELECT category, supplier_name, total_order_value\nFROM (\n  SELECT category, supplier_name, total_order_value,\n         ROW_NUMBER() OVER (PARTITION BY category ORDER BY total_order_value DESC) AS rn\n  FROM cte\n) ranked\nWHERE rn <= 3;","db_id":"sales_example","tag":"1-hop, rank","creator":"Claude"},{"question":"What is the average total revenue for customers with different marital statuses and education levels?","query":"SELECT d.marital_status, d.education, AVG(order_total) AS avg_order_total\nFROM (\n  SELECT d.customer_id, d.marital_status, d.education, SUM(oi.quantity * oi.unit_price) AS order_total\n  FROM demographics d\n  JOIN customers c ON d.customer_id = c.customer_id\n  JOIN orders o ON c.customer_id = o.customer_id\n  JOIN order_items oi ON o.order_id = oi.order_id\n  GROUP BY d.customer_id, d.marital_status, d.education\n) d\nGROUP BY d.marital_status, d.education;","db_id":"sales_example","tag":"1-hop, rank","creator":"Claude"},{"question":"For each supplier, find the most profitable product in terms of total profit (revenue - cost). Show the product name and supplier name.","query":"WITH subtable AS\n(SELECT p2.supplier_id, s2.name as supplier_name, p2.product_id, p2.name as product_name, SUM(oi2.quantity * (oi2.unit_price - p2.price)) AS profit_sum\n  FROM products p2\n  JOIN suppliers s2 ON p2.supplier_id = s2.supplier_id\n  JOIN order_items oi2 ON p2.product_id = oi2.product_id\n  GROUP BY p2.supplier_id, p2.product_id \n),\nsubtable2 AS \n(SELECT tbl.supplier_id, MAX(profit_sum) AS max_profit_sum\nFROM subtable AS tbl\nGROUP BY tbl.supplier_id\n)\nSELECT tbl.supplier_name, tbl.product_name\nFROM subtable tbl JOIN subtable2 tbl2 ON tbl2.supplier_id = tbl.supplier_id\nWHERE tbl.profit_sum = tbl2.max_profit_sum;","db_id":"sales_example","tag":"1-hop, rank","creator":"Claude"},{"question":"What is the average household size of customers who have purchased products in the \"Electronics\" category?","query":"WITH cust AS (\nSELECT DISTINCT c.customer_id\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_items oi ON o.order_id = oi.order_id\nJOIN products p ON oi.product_id = p.product_id\nJOIN suppliers s ON p.supplier_id = s.supplier_id\nWHERE p.category = 'Electronics'\n)\nSELECT AVG(d.household_size) AS avg_household\nFROM demographics d\nJOIN cust c ON d.customer_id = c.customer_id;","db_id":"sales_example","tag":"0-hop","creator":"Claude"},{"question":"Find the top 5 cities by total revenue for each state, considering only orders placed by customers with an income greater than the average income.","query":"WITH cte AS (\n  SELECT c.state, c.city, \n         SUM(oi.quantity * oi.unit_price) AS revenue\n  FROM order_items oi\n  JOIN orders o ON oi.order_id = o.order_id\n  JOIN customers c ON o.customer_id = c.customer_id\n  JOIN demographics d ON c.customer_id = d.customer_id\n  WHERE d.income > (\n    SELECT AVG(income) FROM demographics\n  )\n  GROUP BY c.state, c.city\n)\nSELECT state, city, revenue\nFROM (\n  SELECT state, city, revenue,\n         ROW_NUMBER() OVER (PARTITION BY state ORDER BY revenue DESC) AS rn\n  FROM cte\n) ranked\nWHERE rn <= 5;","db_id":"sales_example","tag":"1-hop, rank","creator":"Claude"},{"question":"Who are the customers with the most orders in each city? Show the city, customer id, and number of orders.","query":"WITH OrderCount AS (\n  SELECT \n    c.customer_id, \n    c.city,\n    COUNT(o.order_id) AS num_orders\n  FROM orders o\n  JOIN customers c ON o.customer_id = c.customer_id\n  GROUP BY c.customer_id, c.city\n)\nSELECT \n  city,\n  customer_id,\n  num_orders\nFROM (\n  SELECT \n    city,\n    customer_id,\n    num_orders,\n    ROW_NUMBER() OVER (PARTITION BY city ORDER BY num_orders DESC) AS rank\n  FROM OrderCount\n) RankedOrders\nWHERE rank = 1;","db_id":"sales_example","tag":"1-hop, rank","creator":"OpenAI"},{"question":"What are the most popular products in each state based on quantity sold? Show the state, product id, and quantity sold.","query":"WITH ProductSales AS (\n  SELECT \n    c.state,\n    oi.product_id,\n    SUM(oi.quantity) AS total_quantity\n  FROM customers c\n  JOIN orders o ON c.customer_id = o.customer_id\n  JOIN order_items oi ON o.order_id = oi.order_id\n  GROUP BY c.state, oi.product_id\n)\nSELECT \n  state, \n  product_id,\n  total_quantity\nFROM (\n  SELECT \n    state,\n    product_id,\n    total_quantity,\n    ROW_NUMBER() OVER (PARTITION BY state ORDER BY total_quantity DESC) AS rank\n  FROM ProductSales\n) RankedProducts\nWHERE rank = 1;","db_id":"sales_example","tag":"1-hop, rank","creator":"OpenAI"},{"question":"What is the monthly revenue growth ratio (new revenue - old revenue \/ old revenue) for each product category? Show the category, month, revenue, and revenue growth ratio.","query":"WITH monthly_revenue AS (\n  SELECT\n    p.category,\n    strftime('%Y-%m', o.order_date) AS month,\n    SUM(oi.quantity * oi.unit_price) AS revenue\n  FROM products p\n  JOIN order_items oi ON p.product_id = oi.product_id\n  JOIN orders o ON oi.order_id = o.order_id\n  GROUP BY p.category, month\n),\nprevious_month_revenue AS (\n  SELECT\n    category,\n    month,\n    revenue,\n    LAG(revenue*1.0) OVER (PARTITION BY category ORDER BY month) AS prev_month_revenue\n  FROM monthly_revenue\n)\nSELECT\n  category,\n  month,\n  revenue,\n  CASE\n    WHEN prev_month_revenue IS NULL THEN NULL\n    ELSE (revenue - prev_month_revenue) \/ prev_month_revenue\n  END AS revenue_growth_ratio\nFROM previous_month_revenue\nWHERE prev_month_revenue IS NOT NULL;","db_id":"sales_example","tag":"1-hop","creator":"OpenAI"},{"question":"Which state has the highest number of repeat customers?","query":"WITH CustomerOrders AS (\n  SELECT \n    c.customer_id, \n    c.state,\n    COUNT(DISTINCT o.order_id) AS order_count\n  FROM orders o\n  JOIN customers c ON o.customer_id = c.customer_id\n  GROUP BY c.customer_id, c.state\n)\nSELECT \n  state,\n  COUNT(customer_id) AS repeat_customers\nFROM CustomerOrders\nWHERE order_count > 1\nGROUP BY state\nORDER BY repeat_customers DESC\nLIMIT 1;","db_id":"sales_example","tag":"1-hop","creator":"OpenAI"},{"question":"What job orders the most Office Furniture in terms of total quantity? Show the job name and number of orders.","query":"WITH office_furniture AS (\n  SELECT\n    p.product_id,\n    p.name\n  FROM products AS p\n  WHERE p.category = 'Office Furniture'\n  GROUP BY\n    p.product_id,\n    p.name\n)\nSELECT\n  d.occupation, SUM(oi.quantity) as number_of_orders\nFROM office_furniture AS m\nJOIN order_items AS oi\n  ON m.product_id = oi.product_id\nJOIN orders AS o\n  ON oi.order_id = o.order_id\nJOIN demographics AS d\n  ON o.customer_id = d.customer_id\nGROUP BY\n  d.occupation\nORDER BY\n  SUM(oi.quantity) DESC\nLIMIT 1;","db_id":"sales_example","tag":"1-hop","creator":"Laurel"},{"question":"What customers buy the most from suppliers who made more than 7k dollars of sales on Electronics items in 2023? Show the customer id, customer name, and total amount spent ordered by total amount spent.","query":"WITH supplier_sales AS (\n  SELECT\n    s.name AS supplier_name,\n    SUM(oi.quantity * oi.unit_price) AS total_sales_amount\n  FROM orders AS o\n  JOIN order_items AS oi\n    ON o.order_id = oi.order_id\n  JOIN products AS p\n    ON oi.product_id = p.product_id\n  JOIN suppliers AS s\n    ON p.supplier_id = s.supplier_id\n  WHERE\n    p.category = 'Electronics' AND STRFTIME('%Y', o.order_date) = '2023'\n  GROUP BY\n    s.name\n)\nSELECT\n  c.customer_id,\n  c.name AS customer_name,\n  SUM(oi.quantity * oi.unit_price) AS total_amount_spent\nFROM orders AS o\nJOIN order_items AS oi\n  ON o.order_id = oi.order_id\nJOIN products AS p\n  ON oi.product_id = p.product_id\nJOIN customers AS c\n  ON o.customer_id = c.customer_id\nJOIN supplier_sales AS ss\n  ON p.supplier_id = (\n    SELECT\n      supplier_id\n    FROM suppliers\n    WHERE\n      name = ss.supplier_name\n  )\nWHERE\n  ss.total_sales_amount > 7000\nGROUP BY\n  c.customer_id,\n  c.name\nORDER BY\n  total_amount_spent DESC;","db_id":"sales_example","tag":"1-hop","creator":"Laurel"},{"question":"Identify the top 10% of customers based on their total lifetime spend across all orders. For each of these high value customers, find the product category they spend the most on. Show the customer name, category, total spend, and total product cateogry spend.","query":"WITH customer_total_spend AS (\n  SELECT c.customer_id, c.name, SUM(oi.quantity * oi.unit_price) AS total_spend\n  FROM customers c\n  JOIN orders o ON c.customer_id = o.customer_id\n  JOIN order_items oi ON o.order_id = oi.order_id\n  GROUP BY c.customer_id, c.name\n),\n\ntop_customers AS (\n  SELECT customer_id, name, total_spend\n  FROM (\n    SELECT customer_id, name, total_spend,\n           PERCENT_RANK() OVER (ORDER BY total_spend DESC) AS percentile\n    FROM customer_total_spend\n  ) ranked\n  WHERE percentile <= 0.1\n),\n\ncustomer_category_spend AS (\n  SELECT tc.customer_id, tc.name, p.category, SUM(oi.quantity * oi.unit_price) AS category_spend\n  FROM top_customers tc\n  JOIN orders o ON tc.customer_id = o.customer_id\n  JOIN order_items oi ON o.order_id = oi.order_id\n  JOIN products p ON oi.product_id = p.product_id\n  GROUP BY tc.customer_id, tc.name, p.category\n),\n\ncustomer_top_category AS (\n  SELECT customer_id, name, category, category_spend,\n         ROW_NUMBER() OVER (PARTITION BY customer_id ORDER BY category_spend DESC) AS rn\n  FROM customer_category_spend\n)\n\nSELECT ctc.name AS customer_name, ctc.category AS top_category, \n       tc.total_spend, ctc.category_spend\nFROM customer_top_category ctc\nJOIN top_customers tc ON ctc.customer_id = tc.customer_id\nWHERE ctc.rn = 1;","db_id":"sales_example","tag":"2-hop, rank","creator":"Laurel"},{"question":"First find the monthly revenue growth ratio (new revenue - old revenue \/ old revenue) for each product category. Then calculate the average monthly growth rate ratio for each category.","query":"WITH monthly_revenue AS (\n  SELECT strftime('%Y-%m', o.order_date) AS month,\n         p.category, \n         SUM(oi.quantity * oi.unit_price) AS revenue\n  FROM orders o\n  JOIN order_items oi ON o.order_id = oi.order_id\n  JOIN products p ON oi.product_id = p.product_id\n  GROUP BY month, p.category\n),\n\nmonthly_growth AS (\n  SELECT category, month, revenue,\n         LAG(revenue) OVER (PARTITION BY category ORDER BY month) AS prev_revenue,\n         CASE \n           WHEN LAG(revenue) OVER (PARTITION BY category ORDER BY month) IS NULL THEN NULL\n           ELSE (revenue - LAG(revenue) OVER (PARTITION BY category ORDER BY month)) \/ LAG(revenue*1.0) OVER (PARTITION BY category ORDER BY month)\n         END AS growth_rate\n  FROM monthly_revenue\n)\nSELECT category, \n       AVG(growth_rate) AS avg_monthly_growth_rate\nFROM monthly_growth\nWHERE growth_rate IS NOT NULL\nGROUP BY category;","db_id":"sales_example","tag":"2-hop","creator":"Laurel"},{"question":"First find the monthly revenue growth ratio (new revenue - old revenue \/ old revenue) for each product category. For the three categories with the highest average monthly growth rate ratio, please show their top supplier in terms of number of items sold. Show the average monthly growth rate, category, supplier name, and number of items sold.","query":"WITH monthly_revenue AS (\n  SELECT strftime('%Y-%m', o.order_date) AS month,\n         p.category, \n         SUM(oi.quantity * oi.unit_price) AS revenue\n  FROM orders o\n  JOIN order_items oi ON o.order_id = oi.order_id\n  JOIN products p ON oi.product_id = p.product_id\n  GROUP BY month, p.category\n),\n\nmonthly_growth AS (\n  SELECT category, month, revenue,\n         LAG(revenue) OVER (PARTITION BY category ORDER BY month) AS prev_revenue,\n         CASE \n           WHEN LAG(revenue) OVER (PARTITION BY category ORDER BY month) IS NULL THEN NULL\n           ELSE (revenue - LAG(revenue) OVER (PARTITION BY category ORDER BY month)) \/ LAG(1.0*revenue) OVER (PARTITION BY category ORDER BY month)\n         END AS growth_rate\n  FROM monthly_revenue\n),\n\ncategory_growth AS (\n  SELECT category, \n         AVG(growth_rate) AS avg_monthly_growth_rate\n  FROM monthly_growth\n  WHERE growth_rate IS NOT NULL\n  GROUP BY category\n),\n\ntop_categories AS (\n  SELECT category, avg_monthly_growth_rate\n  FROM category_growth\n  ORDER BY avg_monthly_growth_rate DESC\n  LIMIT 3\n),\n\nsupplier_sales AS (\n  SELECT p.category, s.name AS supplier_name, SUM(oi.quantity) AS items_sold\n  FROM order_items oi\n  JOIN products p ON oi.product_id = p.product_id\n  JOIN suppliers s ON p.supplier_id = s.supplier_id\n  WHERE p.category IN (SELECT category FROM top_categories)\n  GROUP BY p.category, s.name\n),\n\ntop_suppliers AS (\n  SELECT category, supplier_name, items_sold,\n         ROW_NUMBER() OVER (PARTITION BY category ORDER BY items_sold DESC) AS rn\n  FROM supplier_sales\n)\n\nSELECT tc.avg_monthly_growth_rate, ts.category, ts.supplier_name, ts.items_sold\nFROM top_suppliers ts\nJOIN top_categories tc ON ts.category = tc.category\nWHERE ts.rn = 1;","db_id":"sales_example","tag":"3-hop, rank","creator":"Laurel"},{"question":"For each product category, find the most common education level of customers who have purchased products in that category. Then, show the top two products purchased in terms of quantity sold in each cateogry by customers with that education level. Show the category, education level, product name, and total ordered quantity","query":"WITH customer_category_education AS (\n  SELECT p.category, d.education, COUNT(*) AS education_count\n  FROM order_items oi\n  JOIN orders o ON oi.order_id = o.order_id\n  JOIN customers c ON o.customer_id = c.customer_id\n  JOIN demographics d ON c.customer_id = d.customer_id\n  JOIN products p ON oi.product_id = p.product_id\n  GROUP BY p.category, d.education\n),\n\ncategory_top_education AS (\n  SELECT category, education,\n         ROW_NUMBER() OVER (PARTITION BY category ORDER BY education_count DESC) AS rn\n  FROM customer_category_education\n),\n\ncustomer_category_products AS (\n  SELECT p.category, d.education, p.name AS product_name, SUM(oi.quantity) AS product_quantity\n  FROM order_items oi\n  JOIN orders o ON oi.order_id = o.order_id\n  JOIN customers c ON o.customer_id = c.customer_id\n  JOIN demographics d ON c.customer_id = d.customer_id\n  JOIN products p ON oi.product_id = p.product_id\n  GROUP BY p.category, d.education, p.name\n),\n\ncategory_top_products AS (\n  SELECT ccp.category, ccp.education, ccp.product_name, ccp.product_quantity,\n         ROW_NUMBER() OVER (PARTITION BY ccp.category, ccp.education ORDER BY ccp.product_quantity DESC) AS rn\n  FROM customer_category_products ccp\n  JOIN category_top_education cte ON ccp.category = cte.category AND ccp.education = cte.education\n  WHERE cte.rn = 1\n)\n\nSELECT ctp.category, ctp.education, ctp.product_name, ctp.product_quantity\nFROM category_top_products ctp\nWHERE ctp.rn <= 2;","db_id":"sales_example","tag":"2-hop, rank","creator":"Laurel"},{"question":"Find the customers from California who have spent more than the average customer spend across all states. Show customer name and total spend.","query":"WITH customer_spend AS (\n  SELECT c.customer_id, c.name, c.state, SUM(oi.quantity * oi.unit_price) AS total_spend\n  FROM customers c\n  JOIN orders o ON c.customer_id = o.customer_id\n  JOIN order_items oi ON o.order_id = oi.order_id\n  GROUP BY c.customer_id\n)\nSELECT cs.name, cs.total_spend\nFROM customer_spend cs\nWHERE cs.total_spend > (\n  SELECT AVG(total_spend) FROM customer_spend\n) \nAND cs.state = 'CA';","db_id":"sales_example","tag":"1-hop","creator":"Anthropic"},{"question":"Find the top 3 customers based on their total order value who live in New York.","query":"SELECT c.name, SUM(oi.quantity * oi.unit_price) AS total_order_value\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_items oi ON o.order_id = oi.order_id\nWHERE c.state = 'NY'\nGROUP BY c.customer_id\nORDER BY total_order_value DESC\nLIMIT 3;","db_id":"sales_example","tag":"0-hop","creator":"Anthropic"},{"question":"Find the suppliers located in Florida who have supplied office furniture products. Show their name and id.","query":"WITH electronic_suppliers AS (\n  SELECT DISTINCT s.supplier_id, s.name\n  FROM suppliers s\n  JOIN products p ON s.supplier_id = p.supplier_id\n  WHERE p.category = 'Office Furniture'\n)\nSELECT es.name, es.supplier_id\nFROM electronic_suppliers es\nJOIN suppliers s ON es.supplier_id = s.supplier_id\nWHERE s.state = 'FL';","db_id":"sales_example","tag":"0-hop","creator":"Anthropic"},{"question":"For customers with a master's degree or higher, find the percentage of their total spend on each product category.","query":"WITH customer_category_spend AS (\n  SELECT c.customer_id, p.category, SUM(oi.quantity * oi.unit_price) AS category_spend\n  FROM customers c\n  JOIN orders o ON c.customer_id = o.customer_id\n  JOIN order_items oi ON o.order_id = oi.order_id\n  JOIN products p ON oi.product_id = p.product_id\n  WHERE c.customer_id IN (\n    SELECT customer_id \n    FROM demographics\n    WHERE education in ('Master', 'PhD')\n  )\n  GROUP BY c.customer_id, p.category\n)\nSELECT \n  ccs.category, \n  SUM(ccs.category_spend) \/ SUM(SUM(ccs.category_spend)) OVER () AS percentage\nFROM customer_category_spend ccs\nGROUP BY ccs.category;","db_id":"sales_example","tag":"1-hop, rank","creator":"Anthropic"},{"question":"Find the top 5 products by total revenue from customers who are managers by trade. Show product name, id, and total revenue.","query":"WITH cte_manager_revenue AS (\n  SELECT p.product_id, p.name AS product_name, SUM(oi.quantity * oi.unit_price) AS total_revenue\n  FROM products p\n  JOIN order_items oi ON p.product_id = oi.product_id\n  JOIN orders o ON oi.order_id = o.order_id\n  JOIN customers c ON o.customer_id = c.customer_id\n  JOIN demographics d ON c.customer_id = d.customer_id\n  WHERE d.occupation LIKE '%Manager%'\n  GROUP BY p.product_id\n)\nSELECT product_id, product_name, total_revenue\nFROM (\n  SELECT product_id, product_name, total_revenue,\n         ROW_NUMBER() OVER (ORDER BY total_revenue DESC) AS revenue_rank\n  FROM cte_manager_revenue\n)\nWHERE revenue_rank <= 5;","db_id":"sales_example","tag":"1-hop, rank","creator":"Anthropic"},{"question":"What is the average order total revenue for customers per state who have placed at least 3 distinct orders?","query":"WITH customers_orders AS (\nSELECT c.cust_num, c.state\n  FROM customers c\n  JOIN orders o ON c.cust_num = o.cust_ref\n  GROUP BY c.cust_num, c.state\n  HAVING COUNT(DISTINCT o.order_num) >= 3\n),\ncustomer_order_totals AS (\nSELECT c.cust_num, c.state, o.order_num, SUM(oi.quantity * oi.unit_price) AS revenue\nFROM customers_orders c\nJOIN orders o ON c.cust_num = o.cust_ref\nJOIN order_items oi ON oi.ord_ref = o.order_num\nGROUP BY c.cust_num, c.state, o.order_num)\nSELECT state, AVG(revenue)\nFROM customer_order_totals\nGROUP BY state;","db_id":"sales_ambiguous_joins_example","tag":"1-hop","creator":"Claude"},{"question":"Find the top 5 products by total revenue for each category, considering only orders placed by customers aged 25 to 35. Show category, product, and revenue.","query":"WITH cte AS (\n  SELECT p.category, p.name AS product_name, \n         SUM(oi.quantity * oi.unit_price) AS revenue\n  FROM order_items oi\n  JOIN orders o ON oi.ord_ref = o.order_num\n  JOIN products p ON CAST(p.prod_id AS text) = oi.prod_num\n  JOIN customers c ON o.cust_ref = c.cust_num\n  JOIN demographics d ON c.cust_num = d.cid\n  WHERE d.age BETWEEN 25 AND 35\n  GROUP BY p.category, p.name\n)\nSELECT category, product_name, revenue\nFROM (\n  SELECT category, product_name, revenue,\n         ROW_NUMBER() OVER (PARTITION BY category ORDER BY revenue DESC) AS rn\n  FROM cte\n) ranked\nWHERE rn <= 5;\n","db_id":"sales_ambiguous_joins_example","tag":"1-hop, rank","creator":"Claude"},{"question":"What is the average income of customers who have purchased products from suppliers located in California?","query":"WITH cust AS (\n  SELECT DISTINCT c.cust_num\n  FROM customers c\n  JOIN orders o ON c.cust_num = o.cust_ref\n  JOIN order_items oi ON o.order_num = oi.ord_ref\n  JOIN products p ON CAST(p.prod_id AS text) = oi.prod_num\n  JOIN suppliers s ON p.supplier_alt_id = s.supp_id\n  WHERE s.state = 'CA'\n)\nSELECT AVG(d.income) AS avg_income\nFROM demographics d\nJOIN cust c ON d.cid = c.cust_num;\n","db_id":"sales_ambiguous_joins_example","tag":"0-hop","creator":"Claude"},{"question":"Find the most popular product category, in terms of total quantity, for each occupation. Show the category, occupation, and total quantity ordered.","query":"SELECT d.occupation, p.category, SUM(oi.quantity) AS total_quantity\nFROM demographics d\nJOIN customers c ON d.cid = c.cust_num\nJOIN orders o ON c.cust_num = o.cust_ref\nJOIN order_items oi ON o.order_num = oi.ord_ref\nJOIN products p ON CAST(p.prod_id AS text) = oi.prod_num\nGROUP BY d.occupation, p.category\nHAVING SUM(oi.quantity) = (\n  SELECT MAX(quantity_sum)\n  FROM (\n    SELECT SUM(oi2.quantity) AS quantity_sum\n    FROM demographics d2\n    JOIN customers c2 ON d2.cid = c2.cust_num\n    JOIN orders o2 ON c2.cust_num = o2.cust_ref\n    JOIN order_items oi2 ON o2.order_num = oi2.ord_ref\n    JOIN products p2 ON CAST(p2.prod_id AS text) = oi2.prod_num\n    WHERE d2.occupation = d.occupation\n    GROUP BY p2.category\n  ) t\n);\n","db_id":"sales_ambiguous_joins_example","tag":"1-hop, rank","creator":"Claude"},{"question":"What is the total revenue generated by customers in each zip code, considering only orders placed in the past 12 months?","query":"SELECT c.zip_code, SUM(oi.quantity * oi.unit_price) AS total_revenue\nFROM customers c\nJOIN orders o ON c.cust_num = o.cust_ref\nJOIN order_items oi ON o.order_num = oi.ord_ref\nWHERE o.order_date >= DATE(date('now'), '-12 months')\nGROUP BY c.zip_code;\n","db_id":"sales_ambiguous_joins_example","tag":"0-hop","creator":"Claude"},{"question":"Find the top 3 suppliers by total order value for each product category. Return the supplier name, total order value, and product category.","query":"WITH cte AS (\n  SELECT s.supp_id, s.name AS supplier_name, p.category,\n         SUM(oi.quantity * oi.unit_price) AS total_order_value\n  FROM order_items oi\n  JOIN products p ON CAST(p.prod_id AS text) = oi.prod_num\n  JOIN suppliers s ON p.supplier_alt_id = s.supp_id\n  GROUP BY s.supp_id, s.name, p.category\n)\nSELECT category, supplier_name, total_order_value\nFROM (\n  SELECT category, supplier_name, total_order_value,\n         ROW_NUMBER() OVER (PARTITION BY category ORDER BY total_order_value DESC) AS rn\n  FROM cte\n) ranked\nWHERE rn <= 3;\n","db_id":"sales_ambiguous_joins_example","tag":"1-hop, rank","creator":"Claude"},{"question":"What is the average total revenue for customers with different marital statuses and education levels?","query":"SELECT d.marital_status, d.education, AVG(order_total) AS avg_order_total\nFROM (\n  SELECT d.cid, d.marital_status, d.education, SUM(oi.quantity * oi.unit_price) AS order_total\n  FROM demographics d\n  JOIN customers c ON d.cid = c.cust_num\n  JOIN orders o ON c.cust_num = o.cust_ref\n  JOIN order_items oi ON o.order_num = oi.ord_ref\n  GROUP BY d.cid, d.marital_status, d.education\n) d\nGROUP BY d.marital_status, d.education;\n","db_id":"sales_ambiguous_joins_example","tag":"1-hop, rank","creator":"Claude"},{"question":"For each supplier, find the most profitable product in terms of total profit (revenue - cost). Show the product name and supplier name.","query":"WITH subtable AS (\n  SELECT p.supplier_alt_id, s.name AS supplier_name, p.prod_id, p.name AS product_name, SUM(oi.quantity * (oi.unit_price - p.price)) AS profit_sum\n  FROM products p\n  JOIN suppliers s ON p.supplier_alt_id = s.supp_id\n  JOIN order_items oi ON CAST(p.prod_id AS text) = oi.prod_num\n  GROUP BY p.supplier_alt_id, p.prod_id \n),\nsubtable2 AS (\n  SELECT tbl.supplier_alt_id, MAX(profit_sum) AS max_profit_sum\n  FROM subtable AS tbl\n  GROUP BY tbl.supplier_alt_id\n)\nSELECT tbl.supplier_name, tbl.product_name\nFROM subtable tbl JOIN subtable2 tbl2 ON tbl2.supplier_alt_id = tbl.supplier_alt_id\nWHERE tbl.profit_sum = tbl2.max_profit_sum;\n","db_id":"sales_ambiguous_joins_example","tag":"1-hop, rank","creator":"Claude"},{"question":"What is the average household size of customers who have purchased products in the \"Electronics\" category?","query":"WITH cust AS (\n  SELECT DISTINCT c.cust_num\n  FROM customers c\n  JOIN orders o ON c.cust_num = o.cust_ref\n  JOIN order_items oi ON o.order_num = oi.ord_ref\n  JOIN products p ON CAST(p.prod_id AS text) = oi.prod_num\n  WHERE p.category = 'Electronics'\n)\nSELECT AVG(d.household_size) AS avg_household\nFROM demographics d\nJOIN cust c ON d.cid = c.cust_num;\n","db_id":"sales_ambiguous_joins_example","tag":"0-hop","creator":"Claude"},{"question":"Find the top 5 cities by total revenue for each state, considering only orders placed by customers with an income greater than the average income.","query":"WITH cte AS (\n  SELECT c.state, c.city, \n         SUM(oi.quantity * oi.unit_price) AS revenue\n  FROM order_items oi\n  JOIN orders o ON oi.ord_ref = o.order_num\n  JOIN customers c ON o.cust_ref = c.cust_num\n  JOIN demographics d ON c.cust_num = d.cid\n  WHERE d.income > (\n    SELECT AVG(income) FROM demographics\n  )\n  GROUP BY c.state, c.city\n)\nSELECT state, city, revenue\nFROM (\n  SELECT state, city, revenue,\n         ROW_NUMBER() OVER (PARTITION BY state ORDER BY revenue DESC) AS rn\n  FROM cte\n) ranked\nWHERE rn <= 5;\n","db_id":"sales_ambiguous_joins_example","tag":"1-hop, rank","creator":"Claude"},{"question":"Who are the customers with the most orders in each city? Show the city, customer id, and number of orders.","query":"WITH OrderCount AS (\n  SELECT \n    c.cust_num, \n    c.city,\n    COUNT(o.order_num) AS num_orders\n  FROM orders o\n  JOIN customers c ON o.cust_ref = c.cust_num\n  GROUP BY c.cust_num, c.city\n)\nSELECT \n  city,\n  cust_num AS customer_id,\n  num_orders\nFROM (\n  SELECT \n    city,\n    cust_num,\n    num_orders,\n    ROW_NUMBER() OVER (PARTITION BY city ORDER BY num_orders DESC) AS rank\n  FROM OrderCount\n) RankedOrders\nWHERE rank = 1;\n","db_id":"sales_ambiguous_joins_example","tag":"1-hop, rank","creator":"OpenAI"},{"question":"What are the most popular products in each state based on quantity sold? Show the state, product id, and quantity sold.","query":"WITH ProductSales AS (\n  SELECT \n    c.state,\n    oi.prod_num AS product_id,\n    SUM(oi.quantity) AS total_quantity\n  FROM customers c\n  JOIN orders o ON c.cust_num = o.cust_ref\n  JOIN order_items oi ON o.order_num = oi.ord_ref\n  GROUP BY c.state, oi.prod_num\n)\nSELECT \n  state, \n  product_id,\n  total_quantity\nFROM (\n  SELECT \n    state,\n    product_id,\n    total_quantity,\n    ROW_NUMBER() OVER (PARTITION BY state ORDER BY total_quantity DESC) AS rank\n  FROM ProductSales\n) RankedProducts\nWHERE rank = 1;\n","db_id":"sales_ambiguous_joins_example","tag":"1-hop, rank","creator":"OpenAI"},{"question":"What is the monthly revenue growth ratio (new revenue - old revenue \/ old revenue) for each product category? Show the category, month, revenue, and revenue growth ratio.","query":"WITH monthly_revenue AS (\n  SELECT\n    p.category,\n    strftime('%Y-%m', o.order_date) AS month,\n    SUM(oi.quantity * oi.unit_price) AS revenue\n  FROM products p\n  JOIN order_items oi ON CAST(p.prod_id AS text) = oi.prod_num\n  JOIN orders o ON oi.ord_ref = o.order_num\n  GROUP BY p.category, month\n),\nprevious_month_revenue AS (\n  SELECT\n    category,\n    month,\n    revenue,\n    LAG(revenue) OVER (PARTITION BY category ORDER BY month) AS prev_month_revenue\n  FROM monthly_revenue\n)\nSELECT\n  category,\n  month,\n  revenue,\n  CASE\n    WHEN prev_month_revenue IS NULL THEN NULL\n    ELSE (revenue - prev_month_revenue) \/ prev_month_revenue\n  END AS revenue_growth_ratio\nFROM previous_month_revenue\nWHERE prev_month_revenue IS NOT NULL;\n","db_id":"sales_ambiguous_joins_example","tag":"1-hop","creator":"OpenAI"},{"question":"Which state has the highest number of repeat customers?","query":"WITH CustomerOrders AS (\n  SELECT \n    c.cust_num, \n    c.state,\n    COUNT(DISTINCT o.order_num) AS order_count\n  FROM orders o\n  JOIN customers c ON o.cust_ref = c.cust_num\n  GROUP BY c.cust_num, c.state\n)\nSELECT \n  state,\n  COUNT(cust_num) AS repeat_customers\nFROM CustomerOrders\nWHERE order_count > 1\nGROUP BY state\nORDER BY repeat_customers DESC\nLIMIT 1;\n","db_id":"sales_ambiguous_joins_example","tag":"1-hop","creator":"OpenAI"},{"question":"What job orders the most Office Furniture in terms of total quantity? Show the job name and number of orders.","query":"WITH office_furniture AS (\n  SELECT\n    p.prod_id,\n    p.name\n  FROM products p\n  WHERE p.category = 'Office Furniture'\n  GROUP BY p.prod_id, p.name\n)\nSELECT\n  d.occupation, SUM(oi.quantity) AS number_of_orders\nFROM office_furniture of\nJOIN order_items oi ON of.prod_id = CAST(oi.prod_num AS text)\nJOIN orders o ON oi.ord_ref = o.order_num\nJOIN demographics d ON o.cust_ref = d.cid\nGROUP BY d.occupation\nORDER BY SUM(oi.quantity) DESC\nLIMIT 1;\n","db_id":"sales_ambiguous_joins_example","tag":"1-hop","creator":"Laurel"},{"question":"What customers buy the most from suppliers who made more than 7k dollars of sales on Electronics items in 2023? Show the customer id, customer name, and total amount spent ordered by total amount spent.","query":"WITH supplier_sales AS (\n  SELECT\n    s.name AS supplier_name,\n    SUM(oi.quantity * oi.unit_price) AS total_sales_amount\n  FROM orders o\n  JOIN order_items oi ON o.order_num = oi.ord_ref\n  JOIN products p ON CAST(p.prod_id AS text) = oi.prod_num\n  JOIN suppliers s ON p.supplier_alt_id = s.supp_id\n  WHERE p.category = 'Electronics' AND strftime('%Y', o.order_date) = '2023'\n  GROUP BY s.name\n)\nSELECT\n  c.cust_num AS customer_id,\n  c.name AS customer_name,\n  SUM(oi.quantity * oi.unit_price) AS total_amount_spent\nFROM orders o\nJOIN order_items oi ON o.order_num = oi.ord_ref\nJOIN products p ON CAST(p.prod_id AS text) = oi.prod_num\nJOIN customers c ON o.cust_ref = c.cust_num\nJOIN supplier_sales ss ON p.supplier_alt_id = (\n  SELECT supplier_alt_id FROM suppliers WHERE name = ss.supplier_name\n)\nWHERE ss.total_sales_amount > 7000\nGROUP BY c.cust_num, c.name\nORDER BY total_amount_spent DESC;\n","db_id":"sales_ambiguous_joins_example","tag":"1-hop","creator":"Laurel"},{"question":"Identify the top 10% of customers based on their total lifetime spend across all orders. For each of these high value customers, find the product category they spend the most on. Show the customer name, category, total spend, and total product cateogry spend.","query":"WITH customer_total_spend AS (\n  SELECT c.cust_num, c.name, SUM(oi.quantity * oi.unit_price) AS total_spend\n  FROM customers c\n  JOIN orders o ON c.cust_num = o.cust_ref\n  JOIN order_items oi ON o.order_num = oi.ord_ref\n  GROUP BY c.cust_num, c.name\n),\n\ntop_customers AS (\n  SELECT cust_num, name, total_spend\n  FROM (\n    SELECT cust_num, name, total_spend,\n           PERCENT_RANK() OVER (ORDER BY total_spend DESC) AS percentile\n    FROM customer_total_spend\n  ) ranked\n  WHERE percentile <= 0.1\n),\n\ncustomer_category_spend AS (\n  SELECT tc.cust_num, tc.name, p.category, SUM(oi.quantity * oi.unit_price) AS category_spend\n  FROM top_customers tc\n  JOIN orders o ON tc.cust_num = o.cust_ref\n  JOIN order_items oi ON o.order_num = oi.ord_ref\n  JOIN products p ON CAST(p.prod_id AS text) = oi.prod_num\n  GROUP BY tc.cust_num, tc.name, p.category\n),\n\ncustomer_top_category AS (\n  SELECT cust_num, name, category, category_spend,\n         ROW_NUMBER() OVER (PARTITION BY cust_num ORDER BY category_spend DESC) AS rn\n  FROM customer_category_spend\n)\n\nSELECT ctc.name AS customer_name, ctc.category AS top_category, \n       tc.total_spend, ctc.category_spend\nFROM customer_top_category ctc\nJOIN top_customers tc ON ctc.cust_num = tc.cust_num\nWHERE ctc.rn = 1;\n","db_id":"sales_ambiguous_joins_example","tag":"2-hop, rank","creator":"Laurel"},{"question":"First find the monthly revenue growth ratio (new revenue - old revenue \/ old revenue) for each product category. Then calculate the average monthly growth rate ratio for each category.","query":"WITH monthly_revenue AS (\n  SELECT strftime('%Y-%m', o.order_date) AS month,\n         p.category, \n         SUM(oi.quantity * oi.unit_price) AS revenue\n  FROM orders o\n  JOIN order_items oi ON o.order_num = oi.ord_ref\n  JOIN products p ON CAST(p.prod_id AS text) = oi.prod_num\n  GROUP BY month, p.category\n),\n\nmonthly_growth AS (\n  SELECT category, month, revenue,\n         LAG(revenue) OVER (PARTITION BY category ORDER BY month) AS prev_revenue,\n         CASE \n           WHEN LAG(revenue) OVER (PARTITION BY category ORDER BY month) IS NULL THEN NULL\n           ELSE (revenue - LAG(revenue) OVER (PARTITION BY category ORDER BY month)) \/ LAG(revenue*1.0) OVER (PARTITION BY category ORDER BY month)\n         END AS growth_rate\n  FROM monthly_revenue\n)\nSELECT category, \n       AVG(growth_rate) AS avg_monthly_growth_rate\nFROM monthly_growth\nWHERE growth_rate IS NOT NULL\nGROUP BY category;\n","db_id":"sales_ambiguous_joins_example","tag":"2-hop","creator":"Laurel"},{"question":"First find the monthly revenue growth ratio (new revenue - old revenue \/ old revenue) for each product category. For the three categories with the highest average monthly growth rate ratio, please show their top supplier in terms of number of items sold. Show the average monthly growth rate, category, supplier name, and number of items sold.","query":"WITH monthly_revenue AS (\n  SELECT strftime('%Y-%m', o.order_date) AS month,\n         p.category, \n         SUM(oi.quantity * oi.unit_price) AS revenue\n  FROM orders o\n  JOIN order_items oi ON o.order_num = oi.ord_ref\n  JOIN products p ON CAST(p.prod_id AS text) = oi.prod_num\n  GROUP BY month, p.category\n),\n\nmonthly_growth AS (\n  SELECT category, month, revenue,\n         LAG(revenue) OVER (PARTITION BY category ORDER BY month) AS prev_revenue,\n         CASE \n           WHEN LAG(revenue) OVER (PARTITION BY category ORDER BY month) IS NULL THEN NULL\n           ELSE (revenue - LAG(revenue) OVER (PARTITION BY category ORDER BY month)) \/ LAG(1.0*revenue) OVER (PARTITION BY category ORDER BY month)\n         END AS growth_rate\n  FROM monthly_revenue\n),\n\ncategory_growth AS (\n  SELECT category, \n         AVG(growth_rate) AS avg_monthly_growth_rate\n  FROM monthly_growth\n  WHERE growth_rate IS NOT NULL\n  GROUP BY category\n),\n\ntop_categories AS (\n  SELECT category, avg_monthly_growth_rate\n  FROM category_growth\n  ORDER BY avg_monthly_growth_rate DESC\n  LIMIT 3\n),\n\nsupplier_sales AS (\n  SELECT p.category, s.name AS supplier_name, SUM(oi.quantity) AS items_sold\n  FROM order_items oi\n  JOIN products p ON CAST(p.prod_id AS text) = oi.prod_num\n  JOIN suppliers s ON p.supplier_alt_id = s.supp_id\n  WHERE p.category IN (SELECT category FROM top_categories)\n  GROUP BY p.category, s.name\n),\n\ntop_suppliers AS (\n  SELECT category, supplier_name, items_sold,\n         ROW_NUMBER() OVER (PARTITION BY category ORDER BY items_sold DESC) AS rn\n  FROM supplier_sales\n)\n\nSELECT tc.avg_monthly_growth_rate, ts.category, ts.supplier_name, ts.items_sold\nFROM top_suppliers ts\nJOIN top_categories tc ON ts.category = tc.category\nWHERE ts.rn = 1;\n","db_id":"sales_ambiguous_joins_example","tag":"3-hop, rank","creator":"Laurel"},{"question":"For each product category, find the most common education level of customers who have purchased products in that category. Then, show the top two products purchased in terms of quantity sold in each cateogry by customers with that education level. Show the category, education level, product name, and total ordered quantity","query":"WITH customer_category_education AS (\n  SELECT p.category, d.education, COUNT(*) AS education_count\n  FROM order_items oi\n  JOIN orders o ON oi.ord_ref = o.order_num\n  JOIN customers c ON o.cust_ref = c.cust_num\n  JOIN demographics d ON c.cust_num = d.cid\n  JOIN products p ON CAST(p.prod_id AS text) = oi.prod_num\n  GROUP BY p.category, d.education\n),\n\ncategory_top_education AS (\n  SELECT category, education,\n         ROW_NUMBER() OVER (PARTITION BY category ORDER BY education_count DESC) AS rn\n  FROM customer_category_education\n),\n\ncustomer_category_products AS (\n  SELECT p.category, d.education, p.name AS product_name, SUM(oi.quantity) AS product_quantity\n  FROM order_items oi\n  JOIN orders o ON oi.ord_ref = o.order_num\n  JOIN customers c ON o.cust_ref = c.cust_num\n  JOIN demographics d ON c.cust_num = d.cid\n  JOIN products p ON CAST(p.prod_id AS text) = oi.prod_num\n  GROUP BY p.category, d.education, p.name\n),\n\ncategory_top_products AS (\n  SELECT ccp.category, ccp.education, ccp.product_name, ccp.product_quantity,\n         ROW_NUMBER() OVER (PARTITION BY ccp.category, ccp.education ORDER BY ccp.product_quantity DESC) AS rn\n  FROM customer_category_products ccp\n  JOIN category_top_education cte ON ccp.category = cte.category AND ccp.education = cte.education\n  WHERE cte.rn = 1\n)\n\nSELECT ctp.category, ctp.education, ctp.product_name, ctp.product_quantity\nFROM category_top_products ctp\nWHERE ctp.rn <= 2;\n","db_id":"sales_ambiguous_joins_example","tag":"2-hop, rank","creator":"Laurel"},{"question":"Find the customers from California who have spent more than the average customer spend across all states. Show customer name and total spend.","query":"WITH customer_spend AS (\n  SELECT c.cust_num, c.name, c.state, SUM(oi.quantity * oi.unit_price) AS total_spend\n  FROM customers c\n  JOIN orders o ON c.cust_num = o.cust_ref\n  JOIN order_items oi ON o.order_num = oi.ord_ref\n  GROUP BY c.cust_num\n)\nSELECT cs.name, cs.total_spend\nFROM customer_spend cs\nWHERE cs.total_spend > (\n  SELECT AVG(total_spend) FROM customer_spend\n) \nAND cs.state = 'CA';\n","db_id":"sales_ambiguous_joins_example","tag":"1-hop","creator":"Anthropic"},{"question":"Find the top 3 customers based on their total order value who live in New York.","query":"SELECT c.name, SUM(oi.quantity * oi.unit_price) AS total_order_value\nFROM customers c\nJOIN orders o ON c.cust_num = o.cust_ref\nJOIN order_items oi ON o.order_num = oi.ord_ref\nWHERE c.state = 'NY'\nGROUP BY c.cust_num\nORDER BY total_order_value DESC\nLIMIT 3;\n","db_id":"sales_ambiguous_joins_example","tag":"0-hop","creator":"Anthropic"},{"question":"Find the suppliers located in Florida who have supplied office furniture products. Show their name and id.","query":"WITH office_furniture_suppliers AS (\n  SELECT DISTINCT s.supp_id, s.name\n  FROM suppliers s\n  JOIN products p ON s.supp_id = p.supplier_alt_id\n  WHERE p.category = 'Office Furniture'\n)\nSELECT ofs.name, ofs.supp_id\nFROM office_furniture_suppliers ofs\nJOIN suppliers s ON ofs.supp_id = s.supp_id\nWHERE s.state = 'FL';\n","db_id":"sales_ambiguous_joins_example","tag":"0-hop","creator":"Anthropic"},{"question":"For customers with a master's degree or higher, find the percentage of their total spend on each product category.","query":"WITH customer_category_spend AS (\n  SELECT c.cust_num, p.category, SUM(oi.quantity * oi.unit_price) AS category_spend\n  FROM customers c\n  JOIN orders o ON c.cust_num = o.cust_ref\n  JOIN order_items oi ON o.order_num = oi.ord_ref\n  JOIN products p ON CAST(p.prod_id AS text) = oi.prod_num\n  WHERE c.cust_num IN (\n    SELECT cid \n    FROM demographics\n    WHERE education IN ('Master', 'PhD')\n  )\n  GROUP BY c.cust_num, p.category\n)\nSELECT \n  ccs.category, \n  SUM(ccs.category_spend) \/ SUM(SUM(ccs.category_spend)) OVER () AS percentage\nFROM customer_category_spend ccs\nGROUP BY ccs.category;\n","db_id":"sales_ambiguous_joins_example","tag":"1-hop, rank","creator":"Anthropic"},{"question":"Find the top 5 products by total revenue from customers who are managers by trade. Show product name, id, and total revenue.","query":"WITH cte_manager_revenue AS (\n  SELECT p.prod_id, p.name AS product_name, SUM(oi.quantity * oi.unit_price) AS total_revenue\n  FROM products p\n  JOIN order_items oi ON CAST(p.prod_id AS text) = oi.prod_num\n  JOIN orders o ON oi.ord_ref = o.order_num\n  JOIN customers c ON o.cust_ref = c.cust_num\n  JOIN demographics d ON c.cust_num = d.cid\n  WHERE d.occupation LIKE '%Manager%'\n  GROUP BY p.prod_id\n)\nSELECT prod_id, product_name, total_revenue\nFROM (\n  SELECT prod_id, product_name, total_revenue,\n         ROW_NUMBER() OVER (ORDER BY total_revenue DESC) AS revenue_rank\n  FROM cte_manager_revenue\n)\nWHERE revenue_rank <= 5;\n","db_id":"sales_ambiguous_joins_example","tag":"1-hop, rank","creator":"Anthropic"}]